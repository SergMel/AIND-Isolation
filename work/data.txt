=======================================================================================================================================================================
def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)

  if not op_mvs:
  return float("inf")

  mvs_count = float(len(game.get_legal_moves(player)))
  op_mvs_count = float(len(op_mvs) )
  return mvs_count- op_mvs_count



  *************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0 AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 55 | 45 55 | 45 60 | 40 59 | 41 55 | 45 54 | 46 50 | 50 54 | 46 48 | 52 55 | 45
  2 AB_Center 56 | 44 58 | 42 57 | 43 58 | 42 61 | 39 63 | 37 58 | 42 56 | 44 56 | 44 66 | 34
  3 AB_Improved 52 | 48 55 | 45 50 | 50 50 | 50 51 | 49 53 | 47 46 | 54 50 | 50 51 | 49 46 | 54
--------------------------------------------------------------------------
  Win Rate: 54.3% 56.0% 55.7% 55.7% 55.7% 56.7% 51.3% 53.3% 51.7% 55.7%

There were 21.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

Won mean for custom score function:
AB_Open - 54.4 ± 3.6 %
AB_Center - 59.2 ± 3.2 %
AB_Improved - 50.2 ± 2.7 %
Win Rate - 54.6 ± 4.9 %

=======================================================================================================================================================================
def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)

  if not op_mvs:
  return float("inf")

  mvs_count = float(len(game.get_legal_moves(player)))
  op_mvs_count = float(len(op_mvs) )

  return mvs_count / op_mvs_count


  *************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0 AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 50 | 50 57 | 43 51 | 49 48 | 52 56 | 44 61 | 39 53 | 47 50 | 50 53 | 47 59 | 41
  2 AB_Center 54 | 46 63 | 37 64 | 36 57 | 43 54 | 46 59 | 41 66 | 34 60 | 40 59 | 41 62 | 38
  3 AB_Improved 47 | 53 48 | 52 53 | 47 49 | 51 52 | 48 53 | 47 51 | 49 55 | 45 48 | 52 54 | 46
--------------------------------------------------------------------------
  Win Rate: 50.3% 56.0% 56.0% 51.3% 54.0% 57.7% 56.7% 55.0% 53.3% 58.3%

There were 25.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

Won mean for custom score function:
AB_Open - 54.1 ± 4.1 %
AB_Center - 60.4 ± 3.5 %
AB_Improved - 51.4 ± 2.5 %
Win Rate - 55.4 ± 5.1 %


=======================================================================================================================================================================

Increased timeout to 25 ms.
=======================================================================================================================================================================

def calculate_position_score(mv, height, width):

  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 1 or mv[1] > width - 2):
  return 2
  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 2 or mv[1] > width - 3) or \
  (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 1 or mv[1] > width - 2):
  return 3
  if (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 2 or mv[1] > width - 3):
  return 4
  if (mv[0] < 2 or mv[0] > height - 3) or (mv[1] < 2 or mv[1] > width - 3):
  return 6

  return 8


def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)
  mvs = game.get_legal_moves(player)
  if not op_mvs:
  return float("inf")

  if not mvs:
  return float("-inf")

  return sum([calculate_position_score(mv, game.height, game.width) for mv in mvs]) - \
  sum([calculate_position_score(omv, game.height, game.width) for omv in op_mvs])


  *************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0_ AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 52 | 48 55 | 45 47 | 53 56 | 44 56 | 44 58 | 42 47 | 53 47 | 53 47 | 53 50 | 50
  2 AB_Center 58 | 42 64 | 36 62 | 38 60 | 40 63 | 37 65 | 35 61 | 39 61 | 39 59 | 41 69 | 31
  3 AB_Improved 49 | 51 46 | 54 57 | 43 58 | 42 57 | 43 46 | 54 53 | 47 55 | 45 58 | 42 58 | 42
--------------------------------------------------------------------------
  Win Rate: 53.0% 55.0% 55.3% 58.0% 58.7% 56.3% 53.7% 54.3% 54.7% 59.0%

There were 7.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

Won mean for custom score function:
AB_Open - 51.4 ± 4.4 %
AB_Center - 62.7 ± 2.9 %
AB_Improved - 54.2 ± 4.7 %
Win Rate - 56.1 ± 6.3 %


=======================================================================================================================================================================



def calculate_position_score(mv, height, width):

  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 1 or mv[1] > width - 2):
  return 2
  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 2 or mv[1] > width - 3) or \
  (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 1 or mv[1] > width - 2):
  return 3
  if (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 2 or mv[1] > width - 3):
  return 4
  if (mv[0] < 2 or mv[0] > height - 3) or (mv[1] < 2 or mv[1] > width - 3):
  return 6

  return 8


def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)
  mvs = game.get_legal_moves(player)
  if not op_mvs:
  return float("inf")

  if not mvs:
  return float("-inf")

  return sum([calculate_position_score(mv, game.height, game.width) for mv in mvs]) / \
  sum([calculate_position_score(omv, game.height, game.width) for omv in op_mvs])


  *************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0 AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 54 | 46 59 | 41 55 | 45 49 | 51 60 | 40 56 | 44 57 | 43 57 | 43 59 | 41 53 | 47
  2 AB_Center 59 | 41 59 | 41 57 | 43 56 | 44 58 | 42 63 | 37 61 | 39 52 | 48 64 | 36 69 | 31
  3 AB_Improved 50 | 50 56 | 44 56 | 44 57 | 43 51 | 49 54 | 46 56 | 44 55 | 45 47 | 53 51 | 49
--------------------------------------------------------------------------
  Win Rate: 54.3% 58.0% 56.0% 54.0% 56.3% 57.7% 58.0% 54.7% 56.7% 57.7%

There were 2.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.


Won mean for custom score function:
AB_Open - 56.1 ± 3.2 %
AB_Center - 59.9 ± 4.7 %
AB_Improved - 53.7 ± 3.1 %
Win Rate - 56.6 ± 4.6 %


=======================================================================================================================================================================

def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)
  mvs = game.get_legal_moves(player)

  if not op_mvs:
  return float("inf")

  if not mvs:
  return float("-inf")

  mvs_count = float(len(mvs))
  op_mvs_count = float(len(op_mvs) )

  add = 0.0
  if mvs_count == 1:
  add = -10.0

return mvs_count - op_mvs_count + add


*************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0_ AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 50 | 50 52 | 48 52 | 48 50 | 50 53 | 47 51 | 49 55 | 45 48 | 52 49 | 51 51 | 49
  2 AB_Center 54 | 46 60 | 40 55 | 45 66 | 34 61 | 39 62 | 38 59 | 41 58 | 42 58 | 42 56 | 44
  3 AB_Improved 55 | 45 51 | 49 52 | 48 53 | 47 53 | 47 49 | 51 43 | 57 52 | 48 47 | 53 53 | 47
--------------------------------------------------------------------------
  Win Rate: 53.0% 54.3% 53.0% 56.3% 55.7% 54.0% 52.3% 52.7% 51.3% 53.3%

There were 1.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

Won mean for custom score function:
AB_Open - 51.2 ± 2.0 %
AB_Center - 59.4 ± 3.1 %
AB_Improved - 50.3 ± 3.2 %
Win Rate - 53.7 ± 5.0 %


=======================================================================================================================================================================
def calculate_position_score(mv, height, width):

  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 1 or mv[1] > width - 2):
  return 2
  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 2 or mv[1] > width - 3) or \
  (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 1 or mv[1] > width - 2):
  return 3
  if (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 2 or mv[1] > width - 3):
  return 4
  if (mv[0] < 2 or mv[0] > height - 3) or (mv[1] < 2 or mv[1] > width - 3):
  return 6

  return 8


def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)
  mvs = game.get_legal_moves(player)

  if not op_mvs:
  return float("inf")

  if not mvs:
  return float("-inf")

  mvs_count = float(len(mvs))
  op_mvs_count = float(len(op_mvs) )

  w = game.width
  h = game.height

  loc = game.get_player_location(player)
  op_loc = game.get_player_location(opponent)

  add = (calculate_position_score(loc, h, w) - calculate_position_score(op_loc, h, w)) / 100.0
  return mvs_count - op_mvs_count + add


  *************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0 AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 51 | 49 48 | 52 51 | 49 51 | 49 56 | 44 50 | 50 48 | 52 43 | 57 58 | 42 54 | 46
  2 AB_Center 58 | 42 67 | 33 58 | 42 64 | 36 66 | 34 59 | 41 59 | 41 52 | 48 63 | 37 66 | 34
  3 AB_Improved 50 | 50 51 | 49 55 | 45 48 | 52 45 | 55 48 | 52 50 | 50 50 | 50 51 | 49 51 | 49
--------------------------------------------------------------------------
  Win Rate: 53.0% 55.3% 54.7% 54.3% 55.7% 52.3% 52.3% 48.3% 57.3% 57.0%

There were 30.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

Won mean for custom score function:
AB_Open - 51.0 ± 4.3 %
AB_Center - 61.6 ± 4.6 %
AB_Improved - 49.9 ± 2.6 %
Win Rate - 54.1 ± 6.6 %

=======================================================================================================================================================================
def calculate_position_score(mv, height, width):

  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 1 or mv[1] > width - 2):
  return 1
  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 2 or mv[1] > width - 3) or \
  (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 1 or mv[1] > width - 2):
  return 2
  if (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 2 or mv[1] > width - 3):
  return 3
  if (mv[0] < 2 or mv[0] > height - 3) or (mv[1] < 2 or mv[1] > width - 3):
  return 4

  return 5


def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)
  mvs = game.get_legal_moves(player)
  if not op_mvs:
  return float("inf")

  if not mvs:
  return float("-inf")

  return sum([calculate_position_score(mv, game.height, game.width) for mv in mvs]) / \
  sum([calculate_position_score(omv, game.height, game.width) for omv in op_mvs])



  *************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0 AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 47 | 53 54 | 46 55 | 45 60 | 40 51 | 49 57 | 43 47 | 53 54 | 46 51 | 49 57 | 43
  2 AB_Center 64 | 36 61 | 39 67 | 33 53 | 47 61 | 39 65 | 35 68 | 32 62 | 38 68 | 32 54 | 46
  3 AB_Improved 43 | 57 49 | 51 54 | 46 51 | 49 56 | 44 54 | 46 53 | 47 51 | 49 57 | 43 56 | 44
--------------------------------------------------------------------------
  Win Rate: 51.3% 54.7% 58.7% 54.7% 56.0% 58.7% 56.0% 55.7% 58.7% 55.7%

There were 24.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

Won mean for custom score function:
AB_Open - 54.0 ± 3.7 %
AB_Center - 62.1 ± 5.3 %
AB_Improved - 53.4 ± 2.5 %
Win Rate - 56.5 ± 5.6 %

=======================================================================================================================================================================
def calculate_position_score(mv, height, width):

  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 1 or mv[1] > width - 2):
  return 1
  if (mv[0] < 1 or mv[0] > height - 2) and (mv[1] < 2 or mv[1] > width - 3) or \
  (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 1 or mv[1] > width - 2):
  return 2
  if (mv[0] < 2 or mv[0] > height - 3) and (mv[1] < 2 or mv[1] > width - 3):
  return 3
  if (mv[0] < 2 or mv[0] > height - 3) or (mv[1] < 2 or mv[1] > width - 3):
  return 4

  return 5


def custom_score_t(game, player, k):
  if game.is_loser(player):
  return float("-inf")

  if game.is_winner(player):
  return float("inf")

  opponent = game.get_opponent(player)
  op_mvs = game.get_legal_moves(opponent)
  mvs = game.get_legal_moves(player)
  if not op_mvs:
  return float("inf")

  if not mvs:
  return float("-inf")

  return sum([calculate_position_score(mv, game.height, game.width) for mv in mvs]) - \
  sum([calculate_position_score(omv, game.height, game.width) for omv in op_mvs])



  *************************
  Playing Matches
  *************************

 Match # Opponent AB_Improved AB_Custom AB_Custom_0 AB_Custom_1 AB_Custom_2 AB_Custom_3 AB_Custom_4 AB_Custom_5 AB_Custom_6 AB_Custom_7
  Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost Won | Lost
  1 AB_Open 44 | 56 59 | 41 53 | 47 58 | 42 52 | 48 63 | 37 63 | 37 49 | 51 55 | 45 59 | 41
  2 AB_Center 52 | 48 67 | 33 58 | 42 58 | 42 63 | 37 56 | 44 61 | 39 64 | 36 65 | 35 68 | 32
  3 AB_Improved 50 | 50 46 | 54 56 | 44 52 | 48 55 | 45 52 | 48 46 | 54 56 | 44 51 | 49 57 | 43
--------------------------------------------------------------------------
  Win Rate: 48.7% 57.3% 55.7% 56.0% 56.7% 57.0% 56.7% 56.3% 57.0% 61.3%

There were 24.0 timeouts during the tournament -- make sure your agent handles search timeout correctly, and consider increasing the timeout margin for your agent.

Won mean for custom score function:
AB_Open - 56.8 ± 4.6 %
AB_Center - 62.2 ± 4.0 %
AB_Improved - 52.3 ± 3.9 %
Win Rate - 57.1 ± 5.8 %


=======================================================================================================================================================================
def custom_score_t(game, player, k):
    if game.is_loser(player):
        return float("-inf")

    if game.is_winner(player):
        return float("inf")
    
    opponent = game.get_opponent(player)           
    op_mvs = game.get_legal_moves(opponent)
    mvs = game.get_legal_moves(player)
    if not op_mvs:
        return float("inf")
    
    if not mvs:
        return float("-inf")
    
    mvs_cnt = len(mvs)
    op_mvs_cnt = len(op_mvs)
    
    return float( mvs_cnt - op_mvs_cnt + mvs_cnt / (100.0 * op_mvs_cnt))


                       *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_0  AB_Custom_1  AB_Custom_2  AB_Custom_3  AB_Custom_4  AB_Custom_5  AB_Custom_6  AB_Custom_7 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       AB_Open     52  |  48    44  |  56    50  |  50    53  |  47    50  |  50    48  |  52    51  |  49    53  |  47    58  |  42    49  |  51  
    2      AB_Center    58  |  42    59  |  41    55  |  45    60  |  40    57  |  43    57  |  43    65  |  35    60  |  40    58  |  42    55  |  45  
    3     AB_Improved   54  |  46    53  |  47    53  |  47    43  |  57    48  |  52    51  |  49    52  |  48    54  |  46    47  |  53    56  |  44  
--------------------------------------------------------------------------
           Win Rate:      54.7%        52.0%        52.7%        52.0%        51.7%        52.0%        56.0%        55.7%        54.3%        53.3%    

		   
Won mean for custom score function:
AB_Open - 50.7 ± 3.7 %
AB_Center - 58.4 ± 2.9 %
AB_Improved - 50.8 ± 3.8 %
Win Rate - 53.3 ± 3.0 %
		   
=======================================================================================================================================================================


def custom_score_t(game, player, k):
    if game.is_loser(player):
        return float("-inf")

    if game.is_winner(player):
        return float("inf")
    
    opponent = game.get_opponent(player)           
    op_mvs = game.get_legal_moves(opponent)
    mvs = game.get_legal_moves(player)
    
    if not op_mvs:
        return float("inf")
    
    if not mvs:
        return float("-inf")
    
    mvs_count = float(len(mvs))
    op_mvs_count = float(len(op_mvs)  )    
    
    res = mvs_count - op_mvs_count

    return float(res + mvs_count / 100.0)

                       *************************                         
                             Playing Matches                              
                        *************************                         

 Match #   Opponent    AB_Improved   AB_Custom   AB_Custom_0  AB_Custom_1  AB_Custom_2  AB_Custom_3  AB_Custom_4  AB_Custom_5  AB_Custom_6  AB_Custom_7 
                        Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost   Won | Lost 
    1       AB_Open     56  |  44    51  |  49    48  |  52    51  |  49    51  |  49    58  |  42    57  |  43    56  |  44    57  |  43    51  |  49  
    2      AB_Center    61  |  39    64  |  36    62  |  38    57  |  43    61  |  39    58  |  42    62  |  38    53  |  47    62  |  38    61  |  39  
    3     AB_Improved   49  |  51    50  |  50    58  |  42    57  |  43    63  |  37    55  |  45    61  |  39    51  |  49    51  |  49    53  |  47  
--------------------------------------------------------------------------
           Win Rate:      55.3%        55.0%        56.0%        55.0%        58.3%        57.0%        60.0%        53.3%        56.7%        55.0%    
		   

Won mean for custom score function:
AB_Open - 53.3 ± 3.4 %
AB_Center - 60.0 ± 3.2 %
AB_Improved - 55.4 ± 4.4 %
Win Rate - 56.3 ± 4.6 %
		   
=======================================================================================================================================================================

